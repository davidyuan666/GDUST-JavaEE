<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gust.mapper.CustomerMapper">
    
    <sql id="Base_Column_List">
        id, name, phone, email, address, jobs
    </sql>

    <!-- 使用if标签查询客户 
    可能生成的SQL示例:
    SELECT * FROM customer 
    WHERE name LIKE '%张%' 
    AND phone LIKE '%1234%' 
    AND email LIKE '%test@%' 
    AND address LIKE '%北京%' 
    AND jobs LIKE '%工程师%'
    注：实际SQL取决于传入的参数值，如果某个参数为null或空字符串，对应的条件不会被添加
    -->
    <!-- 使用if标签查询客户 -->
    <select id="queryCustomersByCondition" parameterType="org.gust.pojo.Customer" resultType="org.gust.pojo.Customer">
        SELECT * FROM customer
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND phone LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="address != null and address != ''">
                AND address LIKE CONCAT('%', #{address}, '%')
            </if>
            <if test="jobs != null and jobs != ''">
                AND jobs LIKE CONCAT('%', #{jobs}, '%')
            </if>
        </where>
    </select>


     <!-- 使用choose when otherwise查询客户
    可能生成的SQL示例:
    1. 当name不为空时:
    SELECT id, name, phone, email, address, jobs 
    FROM customer 
    WHERE name LIKE '%张%' 
    ORDER BY id DESC

    2. 当name为空，phone不为空时:
    SELECT id, name, phone, email, address, jobs 
    FROM customer 
    WHERE phone LIKE '%1234%' 
    ORDER BY id DESC

    3. 当所有条件都不满足时:
    SELECT id, name, phone, email, address, jobs 
    FROM customer 
    WHERE 1=1 
    ORDER BY id DESC
    -->
    <select id="queryCustomersByChoose" parameterType="org.gust.pojo.Customer" resultType="org.gust.pojo.Customer">
        SELECT 
        <include refid="Base_Column_List" />
        FROM customer
        <where>
            <choose>
                <when test="name != null and name != ''">
                    AND name LIKE CONCAT('%', #{name}, '%')
                </when>
                <when test="phone != null and phone != ''">
                    AND phone LIKE CONCAT('%', #{phone}, '%')
                </when>
                <when test="email != null and email != ''">
                    AND email LIKE CONCAT('%', #{email}, '%')
                </when>
                <otherwise>
                    AND 1=1
                </otherwise>
            </choose>
        </where>
        ORDER BY id DESC
    </select>


    <!-- findCustomerByNameAndJobs 
    可能生成的SQL示例:
    SELECT * FROM customer 
    WHERE 1=1 
    AND name LIKE '%张%' 
    AND jobs='工程师'
    -->
    <select id="findCustomerByNameAndJobs" parameterType="org.gust.pojo.Customer"
            resultType="org.gust.pojo.Customer">
        select * from customer where 1=1
        <if test="name !=null and name !=''">
            and name like concat('%',#{name}, '%')
        </if>
        <if test="jobs !=null and jobs !=''">
            and jobs= #{jobs}
        </if>
    </select>

    <!--<choose>(<when>、<otherwise>)元素使用 -->
    <select id="findCustomerByNameOrJobs" parameterType="org.gust.pojo.Customer"
            resultType="org.gust.pojo.Customer">
        select * from customer where 1=1
        <choose>
            <!--条件判断 -->
            <when test="name !=null and name !=''">
                and name like concat('%',#{name}, '%')
            </when>
            <when test="jobs !=null and jobs !=''">
                and jobs= #{jobs}
            </when>
            <otherwise>
                and phone is not null
            </otherwise>
        </choose>
    </select>

    <!-- <where>元素使用 -->
    <select id="findCustomerByNameAndJobs2" parameterType="org.gust.pojo.Customer"
            resultType="org.gust.pojo.Customer">
        select * from customer
        <where>
            <if test="name !=null and name !=''">
                and name like concat('%',#{name}, '%')
            </if>
            <if test="jobs !=null and jobs !=''">
                and jobs= #{jobs}
            </if>
        </where>
    </select>

    <!-- <trim>元素使用 -->
    <select id="findCustomerByNameAndJobs3" parameterType="org.gust.pojo.Customer"
            resultType="org.gust.pojo.Customer">
        select * from customer
        <trim prefix="where" prefixOverrides="and">
            <if test="name !=null and name !=''">
                and name like concat('%',#{name}, '%')
            </if>
            <if test="jobs !=null and jobs !=''">
                and jobs= #{jobs}
            </if>
        </trim>
    </select>


    <!-- updateCustomerBySet 
    可能生成的SQL示例:
    UPDATE customer 
    SET name='张三', jobs='工程师', phone='12345678' 
    WHERE id=1
    注：只有非空的字段才会被更新
    -->
    <update id="updateCustomerBySet" parameterType="org.gust.pojo.Customer">
        update customer
        <set>
            <if test="name !=null and name !=''">
                name=#{name},
            </if>
            <if test="jobs !=null and jobs !=''">
                jobs=#{jobs},
            </if>
            <if test="phone !=null and phone !=''">
                phone=#{phone},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- <trim>元素的更新 -->
    <update id="updateCustomerByTrim" parameterType="org.gust.pojo.Customer">
        update customer
        <trim prefix="set" suffixOverrides=",">
            <if test="name !=null and name !=''">
                name=#{name},
            </if>
            <if test="jobs !=null and jobs !=''">
                jobs=#{jobs},
            </if>
            <if test="phone !=null and phone !=''">
                phone=#{phone},
            </if>
        </trim>
        where id=#{id}
    </update>

    <!-- findByArray 
    可能生成的SQL示例:
    SELECT * FROM customer 
    WHERE id IN (1,2,3,4,5)
    -->
    <select id="findByArray" parameterType="java.util.Arrays" resultType="org.gust.pojo.Customer">
        select * from customer where id in
        <foreach item="id" index="index" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--<foreach>元素使用 -->
    <select id="findByList" parameterType="java.util.Arrays" resultType="org.gust.pojo.Customer">
        select * from customer where id in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--<foreach>元素使用 -->
    <select id="findByMap" parameterType="java.util.Map" resultType="org.gust.pojo.Customer">
        select * from customer where jobs=#{jobs} and id in
        <foreach item="roleMap" index="index" collection="id" open="(" separator="," close=")">
            #{roleMap}
        </foreach>
    </select>



</mapper>